version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - '80:80' # Expose HTTP to the host
      - '443:443' # Expose HTTPS to the host (optional, if using SSL)
    volumes:
      - ./certs:/etc/nginx/certs # Mount the 'certs' folder from the repo to /etc/nginx/certs inside the container
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - postgres
      - pgadmin
      - mailserver
    networks:
      - full-stack-network

  # PostgreSQL service
  postgres:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=hive-db
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - full-stack-network

  # pgAdmin service
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=adminpassword
      - PGADMIN_LISTEN_PORT=80 # Ensure it's listening on port 80 inside the container
    ports:
      - '5050:80' # pgAdmin is accessible on port 5050 (no need to change)
    networks:
      - full-stack-network

  # Mailserver (Postfix + Dovecot + Rspamd)
  mailserver:
    image: mailserver/docker-mailserver:latest
    container_name: mailserver
    restart: always
    env_file:
      - .env.mailserver
    hostname: mail
    domainname: user-management.net
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_POSTFIX=1
      - ENABLE_DOVECOT=1
      - ENABLE_RSPAMD=1
    volumes:
      - ./data/mail:/var/mail
      - ./data/state:/var/lib/dovecot
      - ./data/config:/etc/mailserver
      - ./data/certs:/etc/letsencrypt
    networks:
      - full-stack-network

volumes:
  postgres:
  redis:

networks:
  full-stack-network:
    driver: bridge
