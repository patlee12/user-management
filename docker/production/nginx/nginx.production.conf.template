worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;

  # ───────────── HTTP :80 ─────────────
  server {
    listen 80 default_server;
    server_name ${DOMAIN_HOST};

    # ACME challenge for Let's Encrypt (for both HTTP and HTTPS)
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/html;
      default_type "text/plain";
      try_files $uri =404;
    }

    # Health check
    location = /healthz {
      return 200 "OK\n";
    }

    # Redirect to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # ───────────── HTTPS :443 ─────────────
  server {
    listen 443 ssl;
    server_name ${DOMAIN_HOST};

    ssl_certificate     ${SSL_CERT_PATH};
    ssl_certificate_key ${SSL_KEY_PATH};
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # ACME challenge (again for redundancy)
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/html;
      default_type "text/plain";
      try_files $uri =404;
    }

    # ───────────── Frontend (Homepage App) ─────────────
    server_name ${DOMAIN_HOST};
    location / {
      proxy_pass http://homepage-app:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────── Subdomain - Backend (NestJS API) ─────────────
    server_name api.${DOMAIN_HOST};
    location / {
      proxy_pass http://nestjs:3001;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────── Subdomain - AdminJS ─────────────
    server_name admin.${DOMAIN_HOST};
    location / {
      proxy_pass http://adminjs:3001; # Adjust if AdminJS runs on a different port
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ───────────── Subdomain - Swagger ─────────────
    server_name swagger.${DOMAIN_HOST};
    location / {
      proxy_pass http://swagger:3000; # Adjust if Swagger runs on a different port
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
